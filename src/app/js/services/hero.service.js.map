{"version":3,"sources":["services/hero.service.ts"],"names":[],"mappings":"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","file":"services/hero.service.js","sourcesContent":["import { Injectable }    from  '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Hero }        from '../model/hero';\r\n@Injectable()\r\nexport class HeroService {\r\n  private heroesUrl = 'app/heroes';  // URL to web api\r\n  constructor(private http: Http) { }\r\n  getHeroes(): Promise<Hero[]> {\r\n    return this.http.get(this.heroesUrl)\r\n               .toPromise()\r\n               .then(response => response.json().data)\r\n               .catch(this.handleError);\r\n  }\r\n  getHero(id: number) {\r\n    return this.getHeroes()\r\n               .then(heroes => heroes.filter(hero => hero.id === id)[0]);\r\n  }\r\n  save(hero: Hero): Promise<Hero>  {\r\n    if (hero.id) {\r\n      return this.put(hero);\r\n    }\r\n    return this.post(hero);\r\n  }\r\n  delete(hero: Hero) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    let url = `${this.heroesUrl}/${hero.id}`;\r\n    return this.http\r\n               .delete(url, headers)\r\n               .toPromise()\r\n               .catch(this.handleError);\r\n  }\r\n  // Add new Hero\r\n  private post(hero: Hero): Promise<Hero> {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json'});\r\n    return this.http\r\n               .post(this.heroesUrl, JSON.stringify(hero), {headers: headers})\r\n               .toPromise()\r\n               .then(res => res.json().data)\r\n               .catch(this.handleError);\r\n  }\r\n  // Update existing Hero\r\n  private put(hero: Hero) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    let url = `${this.heroesUrl}/${hero.id}`;\r\n    return this.http\r\n               .put(url, JSON.stringify(hero), {headers: headers})\r\n               .toPromise()\r\n               .then(() => hero)\r\n               .catch(this.handleError);\r\n  }\r\n  private handleError(error: any) {\r\n    console.error('An error occurred', error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}